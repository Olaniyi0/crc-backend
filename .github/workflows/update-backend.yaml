name: Update resume backend 

on:
 push:
  branches:
    - main

jobs:
  # Update resources according to changes
  update-resources:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    # Initialize required environment variables
    env: 
      ARM_ACCESS_KEY: ${{ secrets.ARM_ACCESS_KEY }}

    # Steps to deploy resources
    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Install changed-files action
      - name: Check for modified web files
        id: changed-files
        uses: tj-actions/changed-files@v39
        with:
          files: httpTrigger

      # Install the latest version of Terraform CLI 
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2 
        with:
          terraform_wrapper: false

      # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
      - name: Terraform Init
        run: terraform init

      # Checks that all Terraform configuration files adhere to a canonical format
      - name: Terraform Format
        run: terraform fmt -check

      # Generates an execution plan for Terraform
      # - name: Terraform Plan
      #   run: terraform plan -input=false

      # On push to "main", build or change infrastructure according to Terraform configuration files
      - name: Terraform Apply if web files was modified
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          zip -r function_app.zip ./httpTrigger/
          terraform apply -replace='azurerm_storage_blob.web-files["index.html"]' -auto-approve -input=false
      
      # On push to "main", build or change infrastructure according to Terraform configuration files
      - name: Terraform Apply if web files was not modified
        if: steps.changed-files.outputs.any_changed == 'false'
        run: terraform apply -auto-approve -input=false

 